// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Process from "process";
import * as LintIssue from "../entities/LintIssue.bs.mjs";
import * as Colorette from "colorette";

function make(lint) {
  return function () {
    var error = lint();
    if (error.TAG === /* Ok */0) {
      return ;
    }
    var error$1 = error._0;
    if (typeof error$1 === "number") {
      console.log("Couldn't find rescript compiler artifacts in the \"./lib/bs/\" directory. Try to run compiler before the lint script.");
    } else {
      switch (error$1.TAG | 0) {
        case /* BsConfigParseFailure */0 :
            console.log("Failed to parse \"bsconfig.json\":", error$1._0);
            break;
        case /* SourceDirsParseFailure */1 :
            console.log("Failed to parse \".sourcedirs.json\". Check that you use compatible ReScript version. Parsing error:", error$1._0);
            break;
        case /* BsConfigHasOpenedProhibitedModule */2 :
            console.log("Lint failed: Found globally opened module " + error$1._0 + "");
            break;
        case /* LintFailedWithIssues */3 :
            error$1._0.forEach(function (lintIssue) {
                  console.log(Colorette.underline(LintIssue.getLink(lintIssue)), "\n", LintIssue.getMessage(lintIssue), "\n");
                });
            console.log(Colorette.bold("Use custom standard library. Read more in the documentation: " + Colorette.underline("https://github.com/DZakh/rescript-stdlib-lint") + ""));
            break;
        
      }
    }
    Process.exit(1);
  };
}

export {
  make ,
}
/* process Not a pure module */
