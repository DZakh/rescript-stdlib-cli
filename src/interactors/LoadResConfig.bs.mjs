// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Path from "path";
import * as Config from "../entities/Config.bs.mjs";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as ResConfig from "../entities/ResConfig.bs.mjs";
import * as Core__Result from "@dzakh/rescript-core/src/Core__Result.bs.mjs";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function make() {
  return function (config) {
    var tmp;
    try {
      tmp = Fs.readFileSync(Path.resolve(Config.getProjectPath(config), "bsconfig.json"), {
              encoding: "utf8"
            }).toString();
    }
    catch (raw_err){
      var err = Caml_js_exceptions.internalToOCamlException(raw_err);
      if (err.RE_EXN_ID === Js_exn.$$Error) {
        if (err._1.code === "ENOENT") {
          tmp = Fs.readFileSync(Path.resolve(Config.getProjectPath(config), "rescript.json"), {
                  encoding: "utf8"
                }).toString();
        } else {
          throw err;
        }
      } else {
        throw err;
      }
    }
    return Core__Result.mapError(ResConfig.fromJsonString(tmp), (function (error) {
                  return {
                          TAG: "ParsingFailure",
                          _0: error
                        };
                }));
  };
}

export {
  make ,
}
/* fs Not a pure module */
