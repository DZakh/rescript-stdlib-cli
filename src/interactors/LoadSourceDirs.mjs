// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Path from "path";
import * as Process from "process";
import * as SourceDirs from "../entities/SourceDirs.mjs";
import * as Stdlib_Result from "stdlib/src/Stdlib_Result.mjs";
import * as S$ReScriptStruct from "rescript-struct/src/S.mjs";

function make(param) {
  return function () {
    var tmp;
    try {
      tmp = {
        TAG: /* Ok */0,
        _0: Fs.readFileSync(Path.resolve(Process.cwd(), "lib/bs/.sourcedirs.json"), {
                encoding: "utf8"
              }).toString()
      };
    }
    catch (exn){
      tmp = {
        TAG: /* Error */1,
        _0: /* RescriptCompilerArtifactsNotFound */0
      };
    }
    return Stdlib_Result.flatMap(tmp, (function (file) {
                  return Stdlib_Result.mapError(S$ReScriptStruct.parseWith(JSON.parse(file), SourceDirs.struct), (function (error) {
                                return /* ParsingFailure */{
                                        _0: S$ReScriptStruct.$$Error.toString(error)
                                      };
                              }));
                }));
  };
}

export {
  make ,
}
/* fs Not a pure module */
