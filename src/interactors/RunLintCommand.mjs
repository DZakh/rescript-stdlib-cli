// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Process from "process";
import * as LintIssue from "../entities/LintIssue.mjs";
import * as Colorette from "colorette";

function make(lint) {
  return function (maybeStdlibModuleOverride) {
    var error = lint(maybeStdlibModuleOverride);
    if (error.TAG === /* Ok */0) {
      return ;
    }
    var error$1 = error._0;
    var variant = error$1.NAME;
    if (variant === "BS_CONFIG_HAS_OPENED_PROHIBITED_MODULE") {
      console.log("Lint failed: Found globally opened module " + error$1.VAL + "");
    } else if (variant === "LINT_FAILED_WITH_ISSUES") {
      error$1.VAL.forEach(function (lintIssue) {
            console.log(Colorette.underline(LintIssue.getLink(lintIssue)), "\n", LintIssue.getMessage(lintIssue), "\n");
          });
      console.log(Colorette.bold("Use custom standard library. Read more in the documentation: " + Colorette.underline("https://github.com/DZakh/rescript-stdlib-cli") + ""));
    } else if (variant === "BS_CONFIG_PARSE_FAILURE") {
      console.log("Failed to parse \"bsconfig.json\":", error$1.VAL);
    } else {
      console.log("Failed to parse \".sourcedirs.json\". Check that you use compatible ReScript version. Parsing error:", error$1.VAL);
    }
    Process.exit(1);
  };
}

export {
  make ,
}
/* process Not a pure module */
