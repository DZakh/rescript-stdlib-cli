// Generated by ReScript, PLEASE EDIT WITH CARE


function make(path, kind) {
  return {
          path: path,
          kind: kind
        };
}

function getLink(lintIssue) {
  var match = lintIssue.kind;
  if (match.TAG === "InvalidStdlibParentDirName") {
    return lintIssue.path;
  } else {
    return lintIssue.path + ":" + match.line.toString();
  }
}

function getMessage(lintIssue) {
  var match = lintIssue.kind;
  switch (match.TAG) {
    case "ProhibitedModuleOpen" :
        return "Found \"" + match.prohibitedModuleName + "\" module open.";
    case "ProhibitedModuleInclude" :
        return "Found \"" + match.prohibitedModuleName + "\" module include.";
    case "ProhibitedModuleAssign" :
    case "ProhibitedModuleUsage" :
        return "Found \"" + match.prohibitedModuleName + "\" module usage.";
    case "InvalidStdlibParentDirName" :
        return "The \"" + match.stdlibParentDirName + "\" is an invalid directory name for custom standary library related files. Put the files to the directory with the name \"stdlib\" to make it easier to find them.";
    
  }
}

export {
  make ,
  getLink ,
  getMessage ,
}
/* No side effect */
