// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@dzakh/rescript-core/src/Core__Array.bs.mjs";
import * as Core__Option from "@dzakh/rescript-core/src/Core__Option.bs.mjs";

var defaultProhibitedModuleNames = [
  "Belt",
  "Js",
  "ReScriptJs"
];

function fromBscFlag(bscFlag) {
  if (bscFlag.includes("-open")) {
    return bscFlag.replace("-open", "").trim().split(".")[0];
  }
  
}

function fromPath(path) {
  var pathWithoutResExtension = path.replace(/\.resi?$/, "");
  if (path.length === pathWithoutResExtension.length) {
    return ;
  } else {
    return Core__Option.getExnWithMessage(Core__Array.last(pathWithoutResExtension.split("/")), "After splitting path by slashes there should always be at least one item.");
  }
}

function isSubmodule(moduleName, ofModule) {
  return moduleName.startsWith(ofModule + "_");
}

function make(moduleName) {
  return moduleName;
}

var TestData = {
  make: make
};

var defaultStdlibModuleName = "Stdlib";

export {
  defaultStdlibModuleName ,
  defaultProhibitedModuleNames ,
  fromBscFlag ,
  fromPath ,
  isSubmodule ,
  TestData ,
}
/* No side effect */
